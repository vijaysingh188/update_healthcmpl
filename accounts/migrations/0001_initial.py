# Generated by Django 3.0 on 2020-08-17 10:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('title', models.CharField(blank=True, max_length=10, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_no', models.CharField(max_length=255, unique=True)),
                ('payment', models.CharField(blank=True, max_length=255, null=True)),
                ('usecode', models.CharField(blank=True, max_length=255, null=True)),
                ('type_of_doctor', models.CharField(blank=True, max_length=255, null=True)),
                ('name_of_hospital', models.CharField(blank=True, max_length=255, null=True)),
                ('house_no', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('area', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('taluka', models.CharField(blank=True, max_length=255, null=True)),
                ('district', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('no_of_doctor_accounts', models.CharField(blank=True, max_length=255, null=True)),
                ('name_of_nursing_home', models.CharField(blank=True, max_length=255, null=True)),
                ('is_individual', models.BooleanField(default=False)),
                ('is_hdc_individual', models.BooleanField(default=False)),
                ('is_hdc_hospital', models.BooleanField(default=False)),
                ('is_hdc_nursing_home', models.BooleanField(default=False)),
                ('useraddebyindvidualdoctor', models.BooleanField(default=False)),
                ('special_id', models.CharField(default=None, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AddOnServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_onservices', models.CharField(max_length=255)),
                ('add_on_servicescode', models.CharField(max_length=255)),
                ('amount', models.FloatField(default=0)),
                ('cgst', models.FloatField(default=0)),
                ('sgst', models.FloatField(default=0)),
                ('gst', models.FloatField(default=0)),
                ('total_amount', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('phone_no', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('message', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('count_value', models.IntegerField(default=100)),
                ('profileChoices', models.CharField(choices=[('is_individual', 'is_individual'), ('is_hdc_individual', 'is_hdc_individual'), ('is_hdc_hospital', 'is_hdc_hospital'), ('is_hdc_nursing_home', 'is_hdc_nursing_home')], max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='LaboratoryModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investigation_name', models.CharField(blank=True, max_length=255)),
                ('synonyms', models.CharField(blank=True, max_length=255)),
                ('important_note', models.CharField(blank=True, max_length=255)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModuleMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(blank=True, max_length=255)),
                ('module_code', models.CharField(blank=True, max_length=255)),
                ('no_of_patients', models.IntegerField(default=0)),
                ('web_space', models.IntegerField(default=0)),
                ('amount', models.IntegerField(default=0)),
                ('cgst', models.IntegerField(default=0)),
                ('sgst', models.IntegerField(default=0)),
                ('gst', models.IntegerField(default=0)),
                ('total_amount', models.IntegerField(default=0)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='pharamcytab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companyname', models.CharField(max_length=255)),
                ('addresslineone', models.CharField(max_length=255)),
                ('addresslinetwo', models.CharField(max_length=255)),
                ('streetname', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=266)),
                ('state', models.CharField(max_length=255)),
                ('pincode', models.IntegerField(default=0)),
                ('nationalhead', models.CharField(max_length=266)),
                ('contactnumber', models.CharField(blank=True, max_length=255)),
                ('emailaddress', models.EmailField(max_length=254)),
                ('phonenumber', models.CharField(blank=True, max_length=255)),
                ('regionalhead', models.CharField(max_length=255)),
                ('regionalcontactnumber', models.CharField(blank=True, max_length=255)),
                ('regionalemailaddress', models.CharField(max_length=255)),
                ('regionalphonenumber', models.CharField(blank=True, max_length=255)),
                ('scientifichead', models.CharField(max_length=266)),
                ('scientificcontactnumber', models.CharField(blank=True, max_length=255)),
                ('scientificemailaddress', models.EmailField(max_length=254)),
                ('scientificphonenumber', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SecurityQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=255)),
                ('answer', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Webregister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventtitle', models.CharField(max_length=255)),
                ('targetaudiance', models.CharField(max_length=255)),
                ('eventtype', models.CharField(max_length=255)),
                ('created_on', models.DateField(blank=True, null=True)),
                ('end_on', models.DateField(blank=True, null=True)),
                ('Chairpersons', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('mobilenumber', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('Moderatorname', models.CharField(max_length=266)),
                ('mmobile', models.CharField(blank=True, max_length=255)),
                ('memail', models.EmailField(max_length=254)),
                ('ContactPersonanme', models.CharField(blank=True, max_length=255)),
                ('Cmobile', models.CharField(max_length=255)),
                ('Cemail', models.EmailField(max_length=254)),
                ('organizedby', models.CharField(max_length=255)),
                ('sponserby', models.CharField(blank=True, max_length=255)),
                ('Registerationrequired', models.CharField(max_length=266)),
                ('paymentrequired', models.CharField(blank=True, max_length=255)),
                ('partnerrequired', models.CharField(max_length=255)),
                ('creation_link', models.URLField(blank=True, max_length=255, null=True)),
                ('register_link', models.CharField(blank=True, max_length=255, null=True)),
                ('streaming_link', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LaboratoryPreDefine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('select_dropdown_list', models.CharField(max_length=150)),
                ('select', models.CharField(max_length=150)),
                ('investigation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.LaboratoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='LaboratoryEmpty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_age', models.CharField(blank=True, max_length=255)),
                ('to_age', models.CharField(blank=True, max_length=255)),
                ('gender', models.CharField(blank=True, max_length=255)),
                ('conventional', models.CharField(blank=True, max_length=255)),
                ('umo1', models.CharField(blank=True, max_length=255)),
                ('umo2', models.CharField(blank=True, max_length=255)),
                ('conversion_factor', models.CharField(blank=True, max_length=255)),
                ('high1', models.CharField(blank=True, max_length=255)),
                ('low1', models.CharField(blank=True, max_length=255)),
                ('high2', models.CharField(blank=True, max_length=255)),
                ('low2', models.CharField(blank=True, max_length=255)),
                ('investigation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.LaboratoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='Eventregisterationuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header_eventimage', models.FileField(blank=True, null=True, upload_to='images')),
                ('footer_eventimage', models.FileField(blank=True, null=True, upload_to='images')),
                ('streaming_header', models.FileField(blank=True, null=True, upload_to='images')),
                ('streaming_leftpanel', models.FileField(blank=True, null=True, upload_to='images')),
                ('streaming_rightpanel', models.FileField(blank=True, null=True, upload_to='images')),
                ('ticker_content', models.CharField(blank=True, max_length=255, null=True)),
                ('ticker_time', models.IntegerField(blank=True, null=True)),
                ('webregister', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Webregister')),
            ],
        ),
    ]
